#!/usr/bin/env groovy

import hudson.model.*
import hudson.EnvVars
import groovy.json.JsonSlurperClassic
import groovy.json.JsonBuilder
import groovy.json.JsonOutput
import java.net.URL
import java.lang.*


try {
  node('master') {
  
  def packageType = "Shawns Package"


    echo "** packageType==${packageType} **"

    checkout scm
// checkout([$class: 'GitSCM', userRemoteConfigs: [  url: 'git://https://github.com/srummel/Pipeline.git', extensions: [$class: 'CleanBeforeCheckout']]  ] )


    // Load tracing definition file
    def trace = load 'pipeline/pipelineTrace.groovy'
    trace.startStage(WORKSPACE, "${env.BUILD_NUMBER}", "${env.GIT_BRANCH}", 'Pipeline')

    // Load Appropriate Stages
//    def buid = load 'pipeline/stages/_MS_Build_Stage'
//	build.packageType = '${packageType}'
//   echo "** BUILD LOADED **"


//    load 'pipeline/stages/_MS_Coverage_Stage'
//    load 'pipeline/stages/_MS_Install_Stage'
//    load 'pipeline/stages/_MS_ArtifactUpload_Stage'
//    load 'pipeline/stages/_MS_DeployToDev_Stage'
//    load 'pipeline/stages/_MS_DeployToTest_Stage'

    trace.endStage(WORKSPACE, "${env.BUILD_NUMBER}", "${env.GIT_BRANCH}", 'Pipeline')
  }
}
catch (exc) {
    echo "############ CATCH ############"
	
    echo "### Error --> ${exc}  ###"
	
} finally {
    echo "############ FINALLY ############"

}

// Must re-throw exception to propagate error:
/*
    if (err) {
      throw err
    }
*/





