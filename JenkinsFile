#!/usr/bin/env groovy

import hudson.model.*
import hudson.EnvVars
import groovy.json.JsonSlurperClassic
import groovy.json.JsonBuilder
import groovy.json.JsonOutput
import java.net.URL

try {
  node('master') {
    checkout scm

    // Load tracing definition file
    def trace = load 'pipeline/pipelineTrace.groovy'
    trace.startStage(WORKSPACE, "${env.BUILD_NUMBER}", "${env.GIT_BRANCH}", 'Pipeline')

	def currentBuild = Thread.currentThread().executable
    echo "** BUILD_NUMBER == currentBuild **"

    // Load Appropriate Stages
    load 'pipeline/stages/_MS_Build_Stage'
    load 'pipeline/stages/_MS_Coverage_Stage'
    load 'pipeline/stages/_MS_Install_Stage'
    load 'pipeline/stages/_MS_ArtifactUpload_Stage'
    load 'pipeline/stages/_MS_DeployToDev_Stage'
    load 'pipeline/stages/_MS_DeployToTest_Stage'

    trace.endStage(WORKSPACE, "${env.BUILD_NUMBER}", "${env.GIT_BRANCH}", 'Pipeline')
  }
}
catch (exc) {
    echo "############ CATCH ############"

} finally {
    echo "############ FINALLY ############"

}

// Must re-throw exception to propagate error:
/*
    if (err) {
      throw err
    }
*/





