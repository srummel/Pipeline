#!/usr/bin/env groovy

@Library('Groovy_Global')
// import com.servicemaster.devops.Pipeline
import org.foo.Zot

node('master') {
//  def pipeline = new Pipeline(this);

  stage('Build'){
    def z = new org.foo.Zot()
    z.checkOutFrom('test')
  }

  println "done"
}

// import com.sm.Pipeline_Old

//def packageType = "Source Package"
//def STAGES_DIR = "pipeline/stages/"
//def trace

// def pipeline

// try {
//node('master') {
//  checkout scm

//    def pipeline = load 'Pipeline_Old.groovy'
//  Pipeline_Old pipeline = new Pipeline_Old()
//    pipeline.script = this
//    pipeline.runBuild()

//  stage "Init"
//  def pipeline = new com.sm.Pipeline_Old(this)
//  pipeline.runBuild()
//
//
//}
// Load tracing definition file
//    trace = load 'pipeline/pipelineTrace.groovy'
//    trace.location = WORKSPACE
//    trace.buildNumber = "${env.BUILD_NUMBER}"
//    trace.gitBranch = "${env.GIT_BRANCH}"
//    trace.startStage('Pipeline_Old')

// Execute Appropriate Stages
//    def build = load STAGES_DIR + "_MS_Build_Stage"
//    build.packageType = packageType
//    build.trace = trace
//    build.execute()

//    def coverage = load STAGES_DIR + "_MS_Coverage_Stage"
//    coverage.trace = trace
//    coverage.execute()
//
//    def upload = load STAGES_DIR + "_MS_ArtifactUpload_Stage"
//    upload.trace = trace
//    upload.execute()
//
//    def analysis = load STAGES_DIR + "_MS_Code_Analysis"
//    analysis.trace = trace
//    analysis.execute()
//
//    def deployToDev = load STAGES_DIR + "_MS_DeployToDev_Stage"
//    deployToDev.trace = trace
//    deployToDev.execute()
//
//    def deployToTest = load STAGES_DIR + "_MS_DeployToTest_Stage"
//    deployToTest.trace = trace
//    deployToTest.execute()

//   trace.endStage('Pipeline_Old')
//  }
//}
//catch (exc) {
//  echo "Caught: ${exc}"
//}
